<script setup>
import { ref, onMounted } from "vue";

const name = ref("John Doe");
const status = ref("Active");
const tasks = ref(["Task One", "Task Two", "Task Three"]);
const link = ref("https://google.com");
const newTask = ref("");

const addTask = () => {
  if (!newTask.value) return;
  tasks.value.push(newTask.value);
  newTask.value = "";
};

const deleteTask = (index) => {
  tasks.value.splice(index, 1);
}

const toggleStatus = () => {
  if (status.value === "Active") {
    status.value = "Pending";
  } else if (status.value === "Pending") {
    status.value = "Inactive";
  } else {
    status.value = "Active";
  }
};


onMounted(async () => {
  try{
    const response = await fetch("https://jsonplaceholder.typicode.com/todos");
    const data = await response.json();
    tasks.value = data.map((task) => task.title);
    console.log(data)
  } catch (error) {
    console.error(error);
  }
})
</script>

<template>
  <h1>{{ name }}</h1>
  <p v-if="status === 'Active'">User is Active</p>
  <p v-else-if="status === 'Pending'">User is Pending</p>
  <p v-else>User is Inactive</p>
  <button @click="toggleStatus">Toggle Status</button>
  <br/>

  <form @submit.prevent="addTask">
    <label for="newTask">Add Task</label>
    <input type="text" id="newTask" v-model="newTask" />
    <button type="submit">Add</button>
  </form>

  <br/>
  <a :href="link">Click for Google</a>
  <h3>Tasks</h3>
  <ul>
    <li v-for="(task, index) in tasks" :key="task">
      <span>
      {{ task }}
    </span>
    <button @click="deleteTask(index)">x</button>
    </li>
  </ul>
</template>
